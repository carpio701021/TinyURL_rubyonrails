<p id="notice"><%= notice %></p>

<h1>Tinyurls</h1>

<table>
  <thead>
    <tr>
      <th>Original url</th>
      <th>Tiny url</th>
      <th>Expiration</th>
      <th>Used count</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @tinyurls.each do |tinyurl| %>
      <tr>
        <td><%= tinyurl.original_url %></td>
        <td><%= tinyurl.tiny_url %></td>
        <td><%= tinyurl.expiration %></td>
        <td><%= tinyurl.used_count %></td>
        <td><%= link_to 'Show', tinyurl %></td>
        <td><%= link_to 'Edit', edit_tinyurl_path(tinyurl) %></td>
        <td><%= link_to 'Destroy', tinyurl, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Tinyurl', new_tinyurl_path %>

<br />
<br />
<br />

<h1><a id="Supuestos_0"></a>Supuestos</h1>
<h2><a id="Requerimientos_funcionales_2"></a>Requerimientos funcionales:</h2>
<ul>
<li>
<p>Dada una URL, nuestro servicio debe generar un alias más corto y único. Esto se llama un enlace corto. <code>http://localhost:3000/tinyurls</code></p>
</li>
<li>
<p>Cuando los usuarios acceden a un enlace corto, nuestro servicio debería redirigirlos al enlace original. <code>http://localhost:3000/&lt;enlace corto&gt;</code></p>
</li>
<li>
<p>Los usuarios, opcionalmente, deberían poder elegir un enlace corto personalizado para sus URL. <code>Campo abierto para poder ser editado (validado por si hay repetidos)</code></p>
</li>
<li>
<p>Los enlaces caducarán después de un intervalo de tiempo predeterminado estándar. Los usuarios deben poder especificar el tiempo de caducidad. <code>El tiempo predeterminado es de 5 días después. Validacion de url expirada.</code></p>
</li>
</ul>
<h2><a id="Requerimientos_no_funcionales_12"></a>Requerimientos no funcionales:</h2>
<ul>
<li>La redirección de URL debería ocurrir en tiempo real con una latencia mínima. <code>La condición está en el redirect. Me hubiera gustado usar redis para mantener en cache las urls pero por tiempo ya no lo implementé</code></li>
<li>Los enlaces acortados no deben ser adivinables (no predecibles).</li>
</ul>
<h2><a id="Requisitos_extendidos_puntos_extra_17"></a>Requisitos extendidos (puntos extra):</h2>
<ul>
<li>Analítica; Por ejemplo, ¿cuántas veces sucedió una redirección? <code>Incluido contador de redirecciones</code></li>
<li>Nuestro servicio también debe ser accesible a través de una simple API REST (sin autenticación) por otros servicios. <code>Rails expone los servicios RESTful de forma predeterminada para poder ser consumidos como API. Usar 'rake routes' para saber las rutas del API.</code></li>
</ul>